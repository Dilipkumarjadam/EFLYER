@model EFLYER.DTOs.RegisteredUserDTO

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Register User</title>
    <link rel="stylesheet" type="text/css" href="~/css/Register.css" />
</head>
<body>
    <div class="container">
        

        @using (Html.BeginForm("RegisterUser", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-container">
                <h2>REGISTER</h2>
               
                <hr />

                @if (ViewBag.ErrorMessage != null)
                {
                    <div class="alert alert-danger">
                        @ViewBag.ErrorMessage
                    </div>
                }

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryRId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.CountryRId, ViewBag.DROP as SelectList, "-SELECT-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CountryRId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImagePath, "Upload Image")
                    <input type="file" name="IMAGE" class="form-control" />
                    @Html.ValidationMessageFor(model => model.ImagePath)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="submit" value="Register" class="btn-primary" />
                    <div class="text-center">
                        @Html.ActionLink("BACK TO LOGIN", "Login", "Account", new { @class = "btn btn-link" })
                    </div>
                </div>
            </div>
        }


    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>
</html>
